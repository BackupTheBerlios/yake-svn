<metaX> kannst doch reflection nehmen
<psyclonist> f√ºr editor
<psyclonist> ist sehr √§hnlich dem rx system, und bei rx1
<psyclonist> dachte ich, ich nehme es einfach auch daf√ºr :)
<psyclonist> ist auch dort kein problem...
<psyclonist> bei rx2 ist das querying vom type etwas komplizierter aber auch machbar...
<metaX> och, einfach hardcoden
<psyclonist> vorteil w√§re, wenn man set/get callbacks verwenden k√∂nnte...
<psyclonist> metaX: ja, vielleicht... mal sehen ;)
<metaX> oder extern einen dispatch manager, der dir dann f¸r ein field den typ gibt, br‰uchtest nichts im rx selbst hardcoden ...
<psyclonist> ich bin ja kein so ein mmo..g freund, aber WoW sieht gut aus...
<psyclonist> metaX: stimmt...
<psyclonist> br√§uchte ich halt noch nen 'editable' flag... aber das w√§re machbar...
<psyclonist> obwohl... ich brauche extra set/get zeug
<metaX> mach ne liste was du brauchst dann kriegst das zeugs :)
<psyclonist> eigentlich nur 2 sachen...
<psyclonist> - 'editable' flag
<psyclonist> - statt direkt values zu bearbeiten, callbacks verwenden
<psyclonist> - evtl. kategorien, ach was, schmarrn :) overkill... unreal hat's aber >:)
<psyclonist> WoW: http://www.blizzard.com/wow/screenshotindex.aspx?PageNo=2&Set=0
<metaX> einfach eine kategorie ans meta_field h‰ngen, kein aufwand ...
<metaX> editable flag auch kein aufwand, kriegste indrekt schon durchs save/load
<metaX> aber was denn f¸r callbacks?
<psyclonist> metaX: manchmal ist es notwendig einen wert zu editieren, aber kann den nicht direkt (also float*, oder float&, z.B.) bearbeiten, sondern nur √ºber nen interface... z.B. Sto√üd√§mpfer-Werte, die √ºber ein interface gesetzt werden.
<metaX> also functors an get/set ?
<psyclonist> jupp
<metaX> aso
<psyclonist> macht nat√ºrlich nur optional sinn
<psyclonist> weil f√ºr hochperformante sachen ist das eher ineffizient...